NOTE: This file will not be saved on github. So, ensure to manually save it.

Day 0 (12 Jun 2020)

A. Creating git repo on github & use git-pull to get the files onto local

B. Use create-react-app to create react app. Worked okay.
  1. "npm start" did not auto-refresh on changing files.
      Fixed by adding a .env file under the sampleapps folder with the env-var CHOKIDAR_USEPOLLING=true

C. Setting up Express app.
  1. Use npm init - and follow prompts. Use any past project's express package.json to determine dependencies. Use --save & --save-dev on npm install
  2. Typically, npm start on express will not have any problems. BUT - npm run server (which is nodemon server.js) will fail.
     Why? https://stackoverflow.com/questions/50965988/nodemon-internal-watch-failed-enospc-no-space-left-on-device-watch-home-u
     TL;DR: Since express-app is created after client/react app, chances are nodemon on react already watches 1000's of files, folders.
     So, when invoking nodemon for express, it says there is not enough space to watch further files, folders.
     Easy solution: use sudo -s & get 'root'. Then, 'root' user executes npm run server & it will work.
  3. The above advice (on #2) only useful for server-side/back-end dev work. When we need to work on both front & back end,
     - create a TERMINAL window
     - navigate to the server-folder
     - run the appropriate script (from package.json) to concurrently run f-e & b-e. Usually "npm run dev" is the script.
  4. THIS IS AN IMPORTANT LEARNING: Use "e.preventDefault()"
     - When coding this project, I was able to properly set-up the back-end and tested using PostMan.
     - However, trying to replicate the same POST fetch API call from react-js failed (it was working on PostMan)
     - Broke my head for almost 2 days - and it appeared to be an issue with CORS (cross origin resource sharing)
     - On 13 Jul (8 pm), when testing the "console.log" display kept disappearing (and this was the case from 3-4 days back)
     - Trying to figure out why the logs were disappearing on the react-js (but it was showing up on the server.js), I found this:
     - "https://stackoverflow.com/questions/16874317/firebug-and-chrome-console-both-have-disappearing-console-log-messages"



---

References:

Setting up Express Node JS back-end without any database -
https://medium.com/@etiennerouzeaud/how-create-an-api-restfull-in-express-node-js-without-database-b030c687e2ea

Google reCAPTCHA v3 info:
https://www.google.com/recaptcha/admin/site/431127251/setup

site key: [Use this site key in the HTML code your site serves to users : https://developers.google.com/recaptcha/docs/v3]
6LdsAbMZAAAAAEr8d6HAYwzISGfLFRUDnXRDdlk2

secret key: [Use this secret key for communication between your site and reCAPTCHA. : https://developers.google.com/recaptcha/docs/verify]
6LdsAbMZAAAAAGtLuJXB-sa6yXCApG_HPj9F_46R
